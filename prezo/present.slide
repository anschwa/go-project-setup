Hello World Workshop
Golang Indianapolis Oct 23, 2019

Steve McQuaid
Senior Software Engineer, Salesforce
steve@stevemcquaid.com
https://github.com/stevemcquaid

* About me
: A little mind map about me and my background.
: I work for Salesforce who has generously provided us the space and the food and the AV support.
.image img/mind-map.png _ 800

* Let's make a thing
: This is meant to be a workshop so lets bust out the laptops
: Lets create 4 groups. And to mix everyone up, lets count off: 1,2,3,4
    git clone https://github.com/stevemcquaid/go-project-setup.git
    cd go-project-setup
    make setup
    make help
.iframe https://github.com/stevemcquaid/go-project-setup _ 900
.link https://godoc.org/golang.org/x/tools/present

* Protip #1 - Use an IDE
Goland IDE is awesome
.link https://www.jetbrains.com/go/ https://jetbrains.com/go
You can generate table-driven tests, implement interfaces, and much more!
.link https://medium.com/@keperry/5-tips-to-speed-up-golang-development-with-intellij-or-goland-6646110e9c5e Medium Article w/ ProTipsâ„¢

* Protip #2 - Use a package manager for easy updates
.link https://gofi.sh One option is GoFish
    curl -fsSL https://raw.githubusercontent.com/fishworks/gofish/master/scripts/install.sh | bash
    gofish init
    gofish install go
    # How to upgrade...
    gofish upgrade gofish
    gofish upgrade go
.caption It's like a cross-platform Homebrew
.link https://golang.org/doc/install https://golang.org/doc/install
.caption When in doubt - download the Golang binary

* Hello World
: Lets write our first program
.code -edit ../pkg/helloworld/helloworld.go

* Webserver
: Go has built-ins which make writing a webserver easy
.code -edit ../pkg/simpleserver/simpleserver.go

* Easy Configs
I like to take advantage of golang's marshalling to make easy config files.
.code -edit ../config/config.go /type/,/^}/
.code -edit ../config/logger.go /type/,/^}/
.code -edit ../config/server.go /type/,/^}/

* Easy Configs
I also use `github.com/spf13/viper` for path file discovery, but its not necessary.
Built-in: `ioutil.ReadFile()` works just as well.
.code -edit ../pkg/config/setup.go /SetupConfig/,/^}/

* Dockerized Webserver
.play -edit ../Dockerfile

* Logging
: I like the logrus package
: This structure is just how I do it.
.code ../pkg/logger/logger.go /LogService/,/return l.log\n^}/
* Logging
.code ../pkg/configurableserver/main.go /myLogger/,/GetLogger/

* A lesson on go's http middleware libs
Notice how a custom struct is created here.. there is a reason for this
.code ../pkg/configurableserver/main.go /Get\ configuration/,/StartHTTPServer/
.caption `main.go`

* A lesson on go's http middleware libs
In golang's standard library: `net/http`, the main interface is: `http.Handler`
.code src/http.txt
Which means in our `simpleserver`, we are highly restricted by the method signature!
.code ../pkg/simpleserver/simpleserver.go /Run/,/Fprintf/
.caption pkg/simpleserver/simpleserver.go
What if we want to share information with that method?
What if we wanted to use the same logger instance to print something out?
  ...We'd have to get lucky with scope of the variable.


* A Solution!
One way around this issue is to use a member function to call the struct's fields in order to pass information around
.code ../pkg/configurableserver/configurableserver.go /ConfigurableServer/,/^}/
.code ../pkg/configurableserver/configurableserver.go /HelloHandler\(w\ http/,/^}/
.caption pkg/configurableserver/configurableserver.go

* Now gopher it!

* Questions?
.image img/rimshot.gif _ 800

* Pick a Challenge
.image img/gophercises_logo.png _ 500
.caption Gophercises

.image img/learn_go_with_tests.png _ 400
.caption Learn Go With Tests


* Want to Learn Go? ==> Learn Go With Tests
.image img/learn_go_with_tests.png _ 400
- Amazing repo full of challenges to learn the difference aspects of go through tests. Test Driven Learning? (TDD -> TDL)


* Want to Build something? Gophercise!
.image img/learn_go_with_tests.png _ 400
- Guided exercises to build something cool
- Free website with full video walkthrus
- Solutions can be found in public repo branches
- Jon Calhoun has a number of great paid courses... If interested, post on slack (we might be able to do a group discount)

* Learn Go With Tests:
.link https://quii.gitbook.io/learn-go-with-tests/ Full gitbook!
Code: https://github.com/quii/learn-go-with-tests
.link https://github.com/quii/learn-go-with-tests#go-fundamentals Start here
.image img/learn_go_with_tests.png _ 150

* Learn Go With Tests Chapters:
.link https://github.com/quii/learn-go-with-tests/blob/master/install-go.md Install Go
.link https://github.com/quii/learn-go-with-tests/blob/master/hello-world.md Hello World
.link https://github.com/quii/learn-go-with-tests/blob/master/integers.md Integers
.link https://github.com/quii/learn-go-with-tests/blob/master/iteration.md Iteration
.link https://github.com/quii/learn-go-with-tests/blob/master/arrays-and-slices.md Arrays & Slices
.link https://github.com/quii/learn-go-with-tests/blob/master/structs-methods-and-interfaces.md Structs, Methods & Interfaces
.link https://github.com/quii/learn-go-with-tests/blob/master/pointers-and-errors.md Pointers & Errors
.link https://github.com/quii/learn-go-with-tests/blob/master/maps.md Maps
.link https://github.com/quii/learn-go-with-tests/blob/master/dependency-injection.md Dependency Injection
.image img/learn_go_with_tests.png  _ 150

* Learn Go With Tests Chapters:
.link https://github.com/quii/learn-go-with-tests/blob/master/mocking.md Mocking
.link https://github.com/quii/learn-go-with-tests/blob/master/concurrency.md Concurrency
.link https://github.com/quii/learn-go-with-tests/blob/master/select.md Select
.link https://github.com/quii/learn-go-with-tests/blob/master/reflection.md Reflection
.link https://github.com/quii/learn-go-with-tests/blob/master/sync.md Sync
.link https://github.com/quii/learn-go-with-tests/blob/master/context.md Context
.link https://github.com/quii/learn-go-with-tests/blob/master/roman-numerals.md Intro to property based tests via Roman Numerals
.link https://github.com/quii/learn-go-with-tests/blob/master/math.md Maths
.image img/learn_go_with_tests.png  _ 150



* Gophercises
.image img/gophercises_logo.png  _ 400
.link  https://gophercises.com Free Course Website
.link https://github.com/gophercises Github Code Repo

* Gophercises Challenges
.link https://github.com/gophercises/quiz Quiz Game (channels goroutines flags)
.link https://github.com/gophercises/urlshort URL Shortener (http middlewares)
.link https://github.com/gophercises/cyoa Choose Your Own Adventure (html handlers, templates)
.link https://github.com/gophercises/link HTML Link Parser (parsing html, recursion)
.link https://github.com/gophercises/deck Deck of Cards (testing, sorting)
.link https://github.com/gophercises/blackjack Blackjack (game state, loops)
.link https://gophercises.com/exercises/quiet_hn Quiet HackerNews (concurrency)
.link https://github.com/gophercises/secret Secrets CLI (crypto, interface chaining)
.image img/gophercises_logo.png  _ 150

